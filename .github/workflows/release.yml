name: Build and Release

on:
  push:
    tags:
      - 'v*' # Trigger on tags starting with 'v'

jobs:
  build:
    name: Build for Windows and Linux
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest] # Build for Linux and Windows

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x # Specify the .NET version you use

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Project
        run: dotnet publish --configuration Release --output ./out

      - name: Archive Build
        run: |
          if [ ${{ matrix.os }} == 'windows-latest' ]; then
            powershell -Command "New-Item -ItemType Directory -Path artifacts; Compress-Archive -Path ./out/* -DestinationPath artifacts/build-${{ matrix.os }}.zip"
          else
            mkdir -p artifacts
            zip -r artifacts/build-${{ matrix.os }}.zip ./out
          fi
        shell: bash # Ensures compatibility for Linux runners

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}
          path: artifacts/build-${{ matrix.os }}.zip

  release:
    name: Create Release and Upload Artifacts
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-ubuntu-latest
          path: artifacts/linux

      - name: Download Windows Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-windows-latest
          path: artifacts/windows

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux Build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/linux/build-ubuntu-latest.zip
          asset_name: build-linux.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/windows/build-windows-latest.zip
          asset_name: build-windows.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
